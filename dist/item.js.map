{"version":3,"sources":["../src/item.js"],"names":["baseRowHeight","Accordion","props","handleElementClick","e","isOpen","state","open","setState","rootElement","style","height","contentElement","clientHeight","id","title","html","c","labelElement","React","cloneElement","minusSymbolSVG","className","toggleIconStyle","plusSymbolSVG","Component","LI","glamorous","li","borderBottom","transition","padding","margin","position","overflow","cursor","color","blue","BottomPadding","div","ContentDIV","ToggleButton","top","right","WebkitUserSelect","MozUserSelect","MsUserSelect","userSelect","LabelParagraph","p","fontFamily","fontSize","grey_medium","fontWeight","display","verticalAlign","lineHeight","border","width","whiteSpace","textOverflow","tablet_max","phone_max","ToggleButtonLabel","marginLeft"],"mappings":"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","file":"item.js","sourcesContent":["import React, { Component } from 'react';\nimport { plusSymbolSVG, minusSymbolSVG } from './symbols';\nimport glamorous from 'glamorous';\nimport AccordionItem from './item';\nimport { blue, grey_medium } from '@time-with/colors'\nimport { tablet_max, phone_max } from '@time-with/media-queries'\n\nconst baseRowHeight = 50\n\nclass Accordion extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n    }\n  }\n\n  handleElementClick = (e) => {\n    var isOpen = !this.state.open\n    this.setState({\n      open: isOpen\n    })\n    this.rootElement.style.height = isOpen ? `${baseRowHeight + this.contentElement.clientHeight}px`\n    : `${baseRowHeight}px`\n  }\n\n  render() {\n    const { open } = this.state\n    const { id, title, html } = this.props\n\n    return (\n      <LI\n        innerRef={c => this.rootElement = c}\n        className=\"accordion-item\" \n        onClick={this.handleElementClick}\n        key={id}>\n        <LabelParagraph innerRef={c => this.labelElement = c} className='highlight-hover'>\n          {title}\n        </LabelParagraph>\n        <ToggleButton>\n          <ToggleButtonLabel className='highlight-hover'>{ open ? 'read less' : 'read more' }</ToggleButtonLabel>\n          { open \n            ? React.cloneElement( minusSymbolSVG, { className:'highlight-hover', style: toggleIconStyle })\n            : React.cloneElement( plusSymbolSVG, { className:'highlight-hover', style: toggleIconStyle })\n          }\n        </ToggleButton>\n        <ContentDIV\n          className=\"item-content\"\n          innerRef={c => this.contentElement = c}>\n          {html}\n          <BottomPadding></BottomPadding>\n        </ContentDIV>\n      </LI>\n    );\n  }\n}\n\nexport default Accordion;\n\nconst LI = glamorous.li({\n  height: `${baseRowHeight}px`,\n  borderBottom: '1px solid #d8d8d8',\n  transition: 'height 0.25s ease-out',\n  padding: '0',\n  margin: '0',\n  position: 'relative',\n  overflow: 'hidden',\n  cursor: 'pointer',\n  ':hover': {\n    '& .highlight-hover': {\n      color: blue\n    }\n  }\n})\n\nconst BottomPadding = glamorous.div({\n  height: '20px',\n});\n\nconst ContentDIV = glamorous.div({\n  margin: '0px',\n  padding: '0px',\n});\n\nconst ToggleButton = glamorous.div({\n  position: 'absolute',\n  top: '0',\n  right: '0',\n  WebkitUserSelect: 'none',\n  MozUserSelect: 'none',\n  MsUserSelect: 'none',\n  userSelect: 'none',\n  height: `${baseRowHeight}px`,\n});\n\nconst LabelParagraph = glamorous.p({\n  fontFamily: 'proxima-soft',\n  fontSize: '18px',\n  color: grey_medium,\n  fontWeight: 'bold',\n  display: 'inline-block',\n  verticalAlign: 'top',\n  height: `${baseRowHeight}px`,\n  lineHeight: `${baseRowHeight-5}px`,\n  margin: '0',\n  padding: '0',\n  ':last-child': {\n    border: 'none'\n  },\n  width: 'calc(100% - 140px)',\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  [tablet_max]: { width: 'calc(100% - 50px)' },\n  [phone_max]:  { fontSize: '16px', width: 'calc(100% - 30px)' },\n});\n\nconst ToggleButtonLabel = glamorous(LabelParagraph)({\n  border: 'none',\n  width: 'auto !important',\n  [tablet_max]: { display: 'none' },\n});\n\nconst toggleIconStyle = {\n  marginLeft: '20px',\n  position: 'relative', \n  display: 'inline-block',\n  verticalAlign: 'top',\n  top: '15px' ,\n}\n"]}